/*
 * Copyright 2015 Red Hat, Inc. and/or its affiliates.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
*/

package isep.financialai;
import isep.financialai.domain.*
import isep.financialai.domain.enums.*

query "Conclusions"
    $conclusion: Conclusion();
end

rule "rule 1"
    when
        $e : Evidence(getDescription() == EvidenceEnum.FINANCIAL_AUTONOMY, Float.compare(getFloatValue(), 30) < 0 )
    then
        System.out.println("rule 1 triggered -> Cause:" +  EvidenceEnum.FINANCIAL_AUTONOMY + " = " + $e.getFloatValue() + " < 30");
        insert(new Hypothesis($e.getDescription(), AuxEnum.HIGH_OUTSIDE_INVESTMENT));
end

rule "rule 2"
    when
        $h : Hypothesis(getDescription() == EvidenceEnum.FINANCIAL_AUTONOMY, getValue() == AuxEnum.HIGH_OUTSIDE_INVESTMENT)
    then
        System.out.println("rule 2 triggered -> Cause: " + $h.getValue() + " , recommended " + AuxEnum.INCREASE_OWN_CAPITAL);
        insert(new Conclusion(AuxEnum.INCREASE_OWN_CAPITAL));
end

rule "rule 3"
    when
        $c : Conclusion(getDescription() == AuxEnum.INCREASE_OWN_CAPITAL);
    then
        System.out.println("rule 3 triggered -> Cause: " + $c.getDescription());
        insert(new Conclusion(AuxEnum.INCREASE_SOCIAL_CAPITAL));
end

rule "rule 4"
    when
        $c : Conclusion(getDescription() == AuxEnum.INCREASE_OWN_CAPITAL)
    then
        System.out.println("rule 4 triggered -> Cause: " + $c.getDescription());
        insert(new Conclusion(AuxEnum.HIGH_OUTSIDE_INVESTMENT));
end

rule "rule 5"
    when
        $c : Conclusion(getDescription() == AuxEnum.INCREASE_OWN_CAPITAL);
    then
        System.out.println("rule 5 triggered -> Cause: " + $c.getDescription());
        insert(new Conclusion(AuxEnum.REVALUE_TANGIBLE_ASSETS));
end

rule "rule 6"
    when
        $c : Conclusion(getDescription() == AuxEnum.INCREASE_SOCIAL_CAPITAL);
    then
        System.out.println("rule 6 triggered -> Cause: " + $c.getDescription());
        insert(new Conclusion(AuxEnum.MAKE_MONEY_DEPOSIT));
end

rule "rule 7"
    when
        $c : Conclusion(getDescription() == AuxEnum.INCREASE_SOCIAL_CAPITAL);
    then
        System.out.println("rule 7 triggered -> Cause: " + $c.getDescription());
        insert(new Conclusion(AuxEnum.CELEBRATE_PUBLIC_DEED));
end

rule "rule 8"
    when
        $c : Conclusion(getDescription() == AuxEnum.INCREASE_SOCIAL_CAPITAL);
    then
        System.out.println("rule 8 triggered -> Cause: " + $c.getDescription());
        insert(new Conclusion(AuxEnum.REGISTER_CONSERVATORY_COMMERCIAL_REGISTRATION));
end

rule "rule 9"
    when
        $c : Conclusion(getDescription() == AuxEnum.HIGH_OUTSIDE_INVESTMENT);
    then
        System.out.println("rule 9 triggered -> Cause: " + $c.getDescription());
        insert(new Conclusion(AuxEnum.MAKE_CASH_DEPOSIT_MEMBERSHIP_REFUND));
end

rule "rule 10"
    when
        $c : Conclusion(getDescription() == AuxEnum.REVALUE_TANGIBLE_ASSETS)
        $e : Evidence(getDescription() == EvidenceEnum.HAS_PROPERTIES, getBooleanValue() == true)
    then
        System.out.println("rule 10 triggered -> Cause: " + $c.getDescription() + " and " + $e.getDescription());
        insert(new Conclusion(AuxEnum.EVALUATE_COMPANY_PROPERTIES));
end

rule "rule 11"
    when
        $e : Evidence(getDescription() == EvidenceEnum.FINANCIAL_AUTONOMY, Float.compare(getFloatValue(), 30) >= 0) and
        Evidence(getDescription() == EvidenceEnum.FINANCIAL_AUTONOMY, Float.compare(getFloatValue(), 50) < 0 )
    then
        System.out.println("rule 11 triggered -> Cause: Autonomia Financeira = " + $e.getFloatValue() + " between 30 and 50");
        insert(new Conclusion(AuxEnum.GOOD_FINANCIAL_AUTONOMY));
end

rule "rule 12"
    when
        $e : Evidence(getDescription() == EvidenceEnum.FINANCIAL_AUTONOMY, Float.compare(getFloatValue(), 50) >= 0 )
    then
        System.out.println("rule 12 triggered -> Cause: Autonomia Financeira = " + $e.getFloatValue() + " >= 50");
        insert(new Conclusion(AuxEnum.ANALYZE_OWN_CAPITAL_REPLACEMENT));
end

rule "rule 13"
    when
        $e : Evidence(getDescription() == EvidenceEnum.SOLUBILITY, Float.compare(getFloatValue(), 50) <= 0 );
    then
        System.out.println("rule 13 triggered -> Cause: Solvabilidade = " + $e.getFloatValue() + " <= 50");
        insert(new Conclusion(AuxEnum.RAISE_OWN_CAPITAL_DEBT_REFUND));
end

rule "rule 14"
    when
        $e : Evidence(getDescription() == EvidenceEnum.SOLUBILITY, Float.compare(getFloatValue(), 50) > 0 );
    then
        System.out.println("rule 14 triggered -> Cause: " + EvidenceEnum.SOLUBILITY + " = " + $e.getFloatValue() + " > 50");
        insert(new Conclusion(AuxEnum.HAS_FINANCIAL_CAPABILITY));
end

rule "rule 15"
    when
        $e : Evidence(getDescription() == EvidenceEnum.INDEBTEDNESS, Float.compare(getFloatValue(), 50) > 0 );
    then
        System.out.println("rule 15 triggered -> Cause: " + EvidenceEnum.INDEBTEDNESS + " = " + $e.getFloatValue() + " > 50");
        insert(new Conclusion(AuxEnum.HIGH_OUTSIDE_INDEBTEDNESS));
end

rule "rule 16"
    when
        $e : Evidence(getDescription() == EvidenceEnum.SALES_CONTRIBUTION_MARGIN, Float.compare(getFloatValue(),10)>=0);
    then
        System.out.println("rule 16 trigger -> cause: " + EvidenceEnum.SALES_CONTRIBUTION_MARGIN + "=" + $e.getFloatValue() + " >= 10");
        insert(new Conclusion(AuxEnum.GOOD_PROFITABILITY));
end

rule "rule 17"
    when
        $e : Evidence(getDescription() == EvidenceEnum.SALES_CONTRIBUTION_MARGIN, Float.compare(getFloatValue(),10)<0) and
        Evidence(getDescription() == EvidenceEnum.SALES_CONTRIBUTION_MARGIN, Float.compare(getFloatValue(),5)>=0);
    then
        System.out.println("rule 17 trigger -> cause: " + EvidenceEnum.SALES_CONTRIBUTION_MARGIN + "=" + $e.getFloatValue() + " < 10 and >= 5");
        insert(new Conclusion(AuxEnum.ACCEPTABLE_PROFITABILITY));
end

rule "rule 18"
    when
        $e : Evidence(getDescription() == EvidenceEnum.SALES_CONTRIBUTION_MARGIN, Float.compare(getFloatValue(),5)<0);
    then
        System.out.println("rule 18 trigger -> cause: " + EvidenceEnum.SALES_CONTRIBUTION_MARGIN + "=" + $e.getFloatValue() + " < 5");
        insert(new Conclusion(AuxEnum.EXPENDITURE_ANALYSIS));
end

rule "rule 19"
    when
        $e : Evidence(getDescription() == EvidenceEnum.MARGIN_EBITDA, Float.compare(getFloatValue(),10)>=0)
    then
        System.out.println("rule 19 trigger -> cause: " + EvidenceEnum.MARGIN_EBITDA + "=" + $e.getFloatValue() + " >= 10");
        insert(new Conclusion(AuxEnum.MARGIN_ACCEPTABLE));
end

rule "rule 20"
    when
        $e : Evidence(getDescription() == EvidenceEnum.MARGIN_EBITDA, Float.compare(getFloatValue(),10)<0)
    then
        System.out.println("rule 20 trigger -> cause: " + EvidenceEnum.MARGIN_EBITDA + "=" + $e.getFloatValue() + " < 10");
        insert(new Conclusion(AuxEnum.EXPENDITURE_ANALYSIS));
end



